apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  {{- if .Values.shared }}
  name: shared-nvidia-device-plugin-daemonset
  {{- else }}
  name: nvidia-device-plugin-daemonset
  {{- end }}
#   namespace: kube-system
spec:
  template:
    metadata:
      # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
      # reserves resources for critical add-on pods so that they can be rescheduled after
      # a failure.  This annotation works in tandem with the toleration below.
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: nvidia-device-plugin-ds
    spec:
      tolerations:
      # Allow this pod to be rescheduled while the node is in "critical add-ons only" mode.
      # This, along with the annotation above marks this pod as a critical add-on.
      - key: CriticalAddonsOnly
        operator: Exists
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      containers:
      {{- if .Values.shared }}
      - image: "{{ .Values.sharedImage.repository }}:{{ .Values.sharedImage.tag }}"
      {{- else }}
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      {{- end }}
        name: nvidia-device-plugin-ctr
        {{- if .Values.shared }}
        env:
          - name: DP_CONTAINERS_PER_GPU
            value: "{{ .Values.numberOfContainersPerGPU }}"
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
          - name: device-plugin
            mountPath: /var/lib/kubelet/device-plugins
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
      {{- if .Values.shared }}
      nodeSelector:
        gpu.rancher.io/type: 'shared'
      {{- else }}
      nodeSelector:
        gpu.rancher.io/type: 'default'
      {{- end }}
